plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 31

        externalNativeBuild {
            ndk {
                abiFilters "arm64-v8a", "armeabi-v7a", "x86_64"
            }
            cmake {
                targets "banuba-plugin"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    externalNativeBuild {
        cmake {
            path "src/main/plugin_sources/CMakeLists.txt"
        }
    }
}

dependencies {
    compileOnly(name: 'banuba_effect_player-release', ext: 'aar')
    compileOnly(name: 'agora-rtc-sdk', ext: 'jar')

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.1'
}


task extractAAR(type: Copy) {
    println 'Extracting *.so file(s)....'

    from zipTree("../libs/banuba_effect_player-release.aar")
    into "libs/lib/"
    include "jni/**/*.so"

    eachFile {
        def segments = it.getRelativePath().getSegments() as List
        println segments
        it.setPath(segments.tail().join("/"))
        return it
    }
    includeEmptyDirs = false
}

preBuild.dependsOn extractAAR
