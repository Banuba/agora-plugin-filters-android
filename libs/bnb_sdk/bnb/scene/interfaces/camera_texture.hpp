/// \file
/// \addtogroup Scene
/// @{
///
// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from scene.djinni

#pragma once

#include <bnb/utils/defs.hpp>
#include <memory>

namespace bnb { namespace interfaces {

class image;
enum class camera_texture_format;

/**
 *Special class, which represent web or phone camera image textures. Because of different platfroms can provide YUV,
 * or RGBA camera texture representations camera texture can be represented in Y, UV, RGBA formats, depends on
 * platfrom. Subclass of image
 */
class BNB_EXPORT camera_texture {
public:
    virtual ~camera_texture() {}

    /**@return camera texture format (camera_texture_format). Can be Y, UV, or RGBA. */
    virtual camera_texture_format get_format() const = 0;

    /**
     *set camera texture format for current texture.
     *@param format (camera_texture_format). Can be Y, UV, or RGBA.
     */
    virtual void set_format(camera_texture_format format) = 0;

    /**@return upcast to base type */
    virtual std::shared_ptr<image> as_image() = 0;
};

} }  // namespace bnb::interfaces
/// @}

