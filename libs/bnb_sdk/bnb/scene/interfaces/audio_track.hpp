/// \file
/// \addtogroup Scene
/// @{
///
// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from scene.djinni

#pragma once

#include <bnb/utils/defs.hpp>
#include <memory>
#include <string>

namespace bnb { namespace interfaces {

class media;

/**Class represents audio track interface. Subclass of media */
class BNB_EXPORT audio_track {
public:
    virtual ~audio_track() {}

    /**
     *set current audio track playback volume.
     *@param volume (float): new audio volume. must be in range [0, 1]
     */
    virtual void set_volume(float volume) = 0;

    /**@return current audio track playback volume (float) */
    virtual float get_volume() const = 0;

    /**
     *Load audio track file. For now only supports .m4a, .ogg, .mp3 files.
     *@param file (string): absolute path for audio track file.
     */
    virtual void load(const std::string & file) = 0;

    /**@return current loaded audio track (string). */
    virtual std::string get_current_track() const = 0;

    /**cast audio_track to media parent class (media). */
    virtual std::shared_ptr<media> as_media() = 0;
};

} }  // namespace bnb::interfaces
/// @}

