/// \file
/// \addtogroup Scene
/// @{
///
// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from scene.djinni

#pragma once

#include <bnb/utils/defs.hpp>
#include <cstdint>
#include <memory>
#include <string>

namespace bnb { namespace interfaces {

class image;
class resource;

class BNB_EXPORT text_texture {
public:
    virtual ~text_texture() {}

    virtual void load_resource(const std::shared_ptr<resource> & res) = 0;

    virtual int32_t get_width() const = 0;

    virtual int32_t get_height() const = 0;

    virtual void set_width(int32_t value) = 0;

    virtual void set_height(int32_t value) = 0;

    virtual void set_text(const std::string & text) = 0;

    virtual std::string get_text() const = 0;

    virtual void set_font(const std::string & path) = 0;

    virtual std::string get_font() const = 0;

    /**@return upcast to base type */
    virtual std::shared_ptr<image> as_image() = 0;
};

} }  // namespace bnb::interfaces
/// @}

