/// \file
/// \addtogroup Recognizer
/// @{
///
// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from recognizer.djinni

#pragma once

#include "bnb/types/interfaces/frame_data.hpp"
#include <bnb/utils/defs.hpp>
#include <cstdint>
#include <memory>
#include <string>

namespace bnb { namespace interfaces {

class BNB_EXPORT feature {
public:
    virtual ~feature() {}

    /**must return unique id (e.g. a feature pointer or a true random number(most likely) satisfies this criteria) */
    virtual int64_t id() = 0;

    virtual std::string name() = 0;

    virtual bool requires_main_thread() = 0;

    virtual void clean() = 0;

    virtual void process(const std::shared_ptr<::bnb::interfaces::frame_data> & frame_data) = 0;
};

} }  // namespace bnb::interfaces
/// @}

