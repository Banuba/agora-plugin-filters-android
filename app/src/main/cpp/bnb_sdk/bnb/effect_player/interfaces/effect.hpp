/// \file
/// \addtogroup EffectPlayer
/// @{
///
// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from effect_player.djinni

#pragma once

#include <bnb/utils/defs.hpp>
#include <string>

namespace bnb { namespace interfaces {

class BNB_EXPORT effect {
public:
    virtual ~effect() {}

    /** Thread-safe. May be called from any thread */
    virtual std::string url() = 0;

    /**
     * Adds js method call to call queue. Queue is performed during the *draw* operation.
     * If there is an effect in loading state, all calls will be performed
     * when the effect loading is finished.
     * Thread-safe. May be called from any thread
     * @param method_name JS global function name. Member functions are not supported.
     * @param params Function arguments as JSON string.
     */
    virtual void call_js_method(const std::string & method_name, const std::string & params) = 0;

    /**
     * reset effect state
     * MUST be called from the render thread
     */
    virtual void reset() = 0;
};

} }  // namespace bnb::interfaces
/// @}

