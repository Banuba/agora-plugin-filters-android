/// \file
/// \addtogroup Scene
/// @{
///
// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from scene.djinni

#pragma once

#include <bnb/utils/defs.hpp>
#include <memory>
#include <string>

namespace bnb { namespace interfaces {

class image;
class material;
class mesh;
class render_target;
enum class attachment_type;
enum class image_type;

class BNB_EXPORT asset_manager {
public:
    virtual ~asset_manager() {}

    virtual std::shared_ptr<image> create_attachment(const std::string & name, attachment_type type) = 0;

    virtual std::shared_ptr<image> create_cubemap(const std::string & name) = 0;

    virtual std::shared_ptr<render_target> create_render_target(const std::string & name) = 0;

    virtual std::shared_ptr<image> load_image(const std::string & name, image_type type) = 0;

    virtual std::shared_ptr<material> load_material(const std::string & file_name) = 0;

    virtual std::shared_ptr<mesh> load_mesh(const std::string & file_name) = 0;

    virtual std::shared_ptr<image> find_image(const std::string & name) const = 0;
};

} }  // namespace bnb::interfaces
/// @}

