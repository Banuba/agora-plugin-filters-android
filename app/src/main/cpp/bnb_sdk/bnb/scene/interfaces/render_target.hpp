/// \file
/// \addtogroup Scene
/// @{
///
// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from scene.djinni

#pragma once

#include <bnb/utils/defs.hpp>
#include <cstdint>
#include <memory>
#include <string>
#include <vector>

namespace bnb { namespace interfaces {

class image;

class BNB_EXPORT render_target {
public:
    virtual ~render_target() {}

    virtual std::string get_name() const = 0;

    virtual void set_samples_count(int32_t samples) = 0;

    virtual int32_t get_samples_count() const = 0;

    virtual void set_extent(int32_t width, int32_t height) = 0;

    virtual int32_t get_width() const = 0;

    virtual int32_t get_height() const = 0;

    virtual void set_scale(float width, float height) = 0;

    virtual float get_width_scale() const = 0;

    virtual float get_height_scale() const = 0;

    virtual void add_attachment(const std::shared_ptr<image> & attachment) = 0;

    virtual void remove_attachment(const std::shared_ptr<image> & attachment) = 0;

    virtual std::vector<std::shared_ptr<image>> get_attachments() const = 0;
};

} }  // namespace bnb::interfaces
/// @}

