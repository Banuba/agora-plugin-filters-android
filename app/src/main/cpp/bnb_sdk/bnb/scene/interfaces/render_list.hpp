/// \file
/// \addtogroup Scene
/// @{
///
// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from scene.djinni

#pragma once

#include <bnb/utils/defs.hpp>
#include <cstdint>
#include <memory>
#include <string>

namespace bnb { namespace interfaces {

class entity;
class layer;
class render_target;

class BNB_EXPORT render_list {
public:
    virtual ~render_list() {}

    static std::shared_ptr<render_list> create(const std::string & name);

    virtual void set_name(const std::string & name) = 0;

    virtual std::string get_name() const = 0;

    virtual int32_t add_task(const std::shared_ptr<entity> & camera, const std::shared_ptr<layer> & layer, const std::shared_ptr<render_target> & target) = 0;

    virtual std::shared_ptr<entity> get_task_camera(int32_t task_index) const = 0;

    virtual std::shared_ptr<layer> get_task_layer(int32_t task_index) const = 0;

    virtual std::shared_ptr<render_target> get_task_target(int32_t task_index) const = 0;

    virtual void clear() = 0;
};

} }  // namespace bnb::interfaces
/// @}

