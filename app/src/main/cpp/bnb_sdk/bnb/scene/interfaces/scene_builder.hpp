/// \file
/// \addtogroup Scene
/// @{
///
// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from scene.djinni

#pragma once

#include <bnb/utils/defs.hpp>
#include <cstdint>
#include <memory>
#include <string>

namespace bnb { namespace interfaces {

class scene;
struct vec3;

class BNB_EXPORT scene_builder {
public:
    virtual ~scene_builder() {}

    static std::shared_ptr<scene_builder> create(const std::string & scene_name);

    virtual std::shared_ptr<scene_builder> append_default_scene() = 0;

    virtual std::shared_ptr<scene_builder> append_beauty_scene(int32_t face_number) = 0;

    virtual std::shared_ptr<scene_builder> append_face_tracker_debug_scene(int32_t face_number, const vec3 & color) = 0;

    virtual std::shared_ptr<scene_builder> append_spider_debug_scene(const std::string & url, int32_t face_number) = 0;

    virtual std::shared_ptr<scene_builder> append_trolls_scene(const std::string & url) = 0;

    virtual std::shared_ptr<scene_builder> append_incredibles_scene(const std::string & url) = 0;

    virtual std::shared_ptr<scene_builder> append_anime_style_scene(const std::string & url) = 0;

    virtual std::shared_ptr<scene_builder> append_transylvania_scene(const std::string & url) = 0;

    virtual std::shared_ptr<scene> get_result() = 0;
};

} }  // namespace bnb::interfaces
/// @}

