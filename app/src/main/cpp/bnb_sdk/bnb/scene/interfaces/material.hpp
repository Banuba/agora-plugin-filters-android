/// \file
/// \addtogroup Scene
/// @{
///
// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from scene.djinni

#pragma once

#include <bnb/utils/defs.hpp>
#include <memory>
#include <string>
#include <vector>

namespace bnb { namespace interfaces {

class image;
class parameter;
struct state;

class BNB_EXPORT material {
public:
    virtual ~material() {}

    virtual std::string get_name() const = 0;

    virtual void add_parameter(const std::shared_ptr<parameter> & parameter) = 0;

    virtual std::vector<std::shared_ptr<parameter>> get_parameters() const = 0;

    virtual void remove_parameter(const std::shared_ptr<parameter> & parameter) = 0;

    virtual void set_state(const state & state) = 0;

    virtual state get_state() const = 0;

    virtual void add_image(const std::string & sampler, const std::shared_ptr<image> & image) = 0;

    virtual std::vector<std::string> get_samplers() const = 0;

    virtual std::vector<std::shared_ptr<image>> get_images() const = 0;

    virtual void reload() = 0;
};

} }  // namespace bnb::interfaces
/// @}

